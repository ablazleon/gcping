
# This action whenever there is a push or a pull request on dev/mddrid-gcping branch
# active the following steps to deploy a dev env:
#
# Prerequisites: having configured the secrets in the repo, in repository secrets (https://stackoverflow.com/questions/67964110/how-to-access-secrets-when-using-flutter-web-with-github-actions/67998780#67998780)
# GCP_PROJECT
# GCP_CREDENTIALS, it is configured a service account with the minimal permissions. But first with admin permissions json
#
# GITHUB_TOKEN, is not needed, it is already installed (https://dev.to/github/the-githubtoken-in-github-actions-how-it-works-change-permissions-customizations-3cgp#:~:text=The%20GITHUB_TOKEN%20secret%20is%20basically,repository%20that%20contains%20your%20workflow.)
#
# Afterwards, allow apis: cloud run admin api
#
# 1. checkout
# 2. setup node and build the static assets
# 3. the image is deployed to cloud run
# 4. allow cloud run to be accessed
# 5. insert a comment


name: run

on:
  push:
    branches: [ dev/madrid-gcping ]


jobs:
  stage_pr:
    runs-on: ubuntu-latest

    permissions:
      contents: 'write'
      id-token: 'write'

    steps:
    - uses: actions/checkout@v2
      name: 'Check out Github repository'
    - uses: actions/setup-node@v2
      with:
        node-version: '16'
    - run: cd web && npm install && npm run build
  

    # Install gcloud, do not specify authentication.
    - uses: 'google-github-actions/setup-gcloud@v0'
      name: 'Set up Google Cloud SDK'
      with:
        project_id: ${{ secrets.GCP_PROJECT }}

    # Configure Login via a service account key secret.
    - id: 'auth'
      name: 'Authenticate to Google Cloud using Service Account Key secret'
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

    - uses: imjasonh/setup-ko@v0.4
      name: 'Set up ko'
      id: ko
    - env:
        KO_DOCKER_REPO: 'gcr.io/${{ secrets.GCP_PROJECT }}'
      name: 'Publish to Google Container Registry'
      run: |-
        gcloud auth configure-docker gcr.io --quiet
        echo IMAGE=$(ko publish ./cmd/ping/) >> $GITHUB_ENV 
        
    - run: env
    
    - id: 'deploy'
      name: 'Stage to Cloud Run'
      uses: 'google-github-actions/deploy-cloudrun@main'
      with:
        service: 'pr-${{ github.event.push.number }}-${{ github.sha }}'
        image: '${{ env.IMAGE }}'

    - id: 'allowAll'
      name: 'Allow unauthenticated requests to staging endpoint'
      run: 'gcloud run services add-iam-policy-binding pr-${{ github.event.push.number }}-${{ github.sha }} --member="allUsers" --role="roles/run.invoker" --region=us-central1'

    - name: Comment staged Cloud Run URL
      uses: peter-evans/commit-comment@v2
      with:
        body: |
          Push staged at '"${{ steps.deploy.outputs.url }}"'
      
